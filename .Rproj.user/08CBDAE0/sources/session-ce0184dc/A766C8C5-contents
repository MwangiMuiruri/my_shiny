## Load apckages ================================================================
pacman::p_load(readxl,data.table,tidyverse,lubridate,janitor)  ### pacman to easily load packages
## import required datasets======================================================
## using readxl
baseline_data<-read_excel(file.choose())|> ### file.choose() allows you to browse to the file you require
  setNames(c("subjid","dob","date_admn","sex","site")) ### setNames to rename your columns ### package data.table
clinical_presentation<-read_excel(file.choose())|>  
  setNames(c("subjid","deep_bre","pallor","temp","fever","fever_drn"))
lab_results<-read_excel(file.choose())|>
  setNames(c("subjid","blood_ct"))
admission_data<-full_join(baseline_data,clinical_presentation, by="subjid")|>  ### dplyr package: to fully join the dataset, explore left_join()
  mutate(sex=factor(sex, levels = c(2,1),labels = c("Male","Female")), ## mutate to create new columns or update existing column
         site=factor(site, levels = c(1,2,3,4,5),labels = c("A","B","C","D","E")), ## factor to define your levels
         deep_bre=factor(deep_bre, levels = c("N","Y"),labels = c("No","Yes")),
         pallor=factor(pallor, levels = c("N","Y","Mild-Moderate","Severe"),labels = c("No","Yes","Mild-Moderate","Severe")),
         fever=factor(fever, levels = c(0,1),labels = c("No","Yes")))
report1<-admission_data|>
  filter(date_admn>as.Date("2016-12-31")&date_admn<as.Date("2020-01-01"))|> ### filter verb to filter accross a column and/or columns
  mutate(year= year(date_admn))|>
  group_by(year,site)|> ## group_by to group your data as per the required variables
  summarise(count=n(), .groups = 'drop')|>## summarise to summarise your grouped data by any function" mean, median, sd"
  pivot_wider(names_from = "site",values_from = "count")|> 
  adorn_totals(c("col","row"))
report2<-admission_data|>
  mutate(age=as.numeric(as.Date(date_admn)-as.Date(dob))/7)|>
  group_by(site,sex)|>
  summarise(mean=mean(age, na.rm=TRUE),.groups = 'drop')|>
  pivot_wider(names_from = "sex",values_from = "mean")
final_case_data<-full_join(admission_data,lab_results, by="subjid")
report3<-final_case_data|>
  select(subjid,date_admn,sex,site,blood_ct)|>
  filter(is.na(blood_ct))
ggplot(admission_data|>
                mutate(age=as.numeric(as.Date(date_admn)-as.Date(dob))/7),aes(age,temp,color=sex))+## define your data; x and y axis plus any other
  geom_point()+ ## generate a scatterplot
  xlab("Age in weeks")+ ylab("Temperature") ### rename your axis, xlab for x-axis ylab for y-axis
write.csv(report3,here("missing lab results.csv"))### export in csv format
write.csv(final_case_data,here("final case data.csv"))